/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.unicauca.openmarket.presentation;

import co.edu.unicauca.openmarket.domain.Category;
import co.edu.unicauca.openmarket.domain.Product;
import co.edu.unicauca.openmarket.domain.service.CategoryService;
import co.edu.unicauca.openmarket.domain.service.ProductService;
import co.edu.unicauca.openmarket.infra.Messages;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author harve
 */
public class GUICategory extends javax.swing.JFrame {

    private final ProductService productService;
    private CategoryService categoryService;
    private boolean addOption;

    /**
     * Creates new form GUICategoria
     */
    public GUICategory(CategoryService categoryService, ProductService productService) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.categoryService = categoryService;
        this.productService = productService;
        stateInitial();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNombreCategoria = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jpButtonsCategoria = new javax.swing.JPanel();
        btnNuevaCategoria = new javax.swing.JButton();
        btnEditarCategoria = new javax.swing.JButton();
        btnGrabarCategoria = new javax.swing.JButton();
        btnCancelarCategoria = new javax.swing.JButton();
        btnEliminarCategoria = new javax.swing.JButton();
        btnBuscarCategoria = new javax.swing.JButton();
        btnCerrarCategoria = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtIdCategoria = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Categoria");
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Categoría");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 70));
        jPanel1.add(txtNombreCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 150, 20));

        jLabel1.setText("Nombre:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        btnNuevaCategoria.setText("Nuevo");
        btnNuevaCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaCategoriaActionPerformed(evt);
            }
        });
        jpButtonsCategoria.add(btnNuevaCategoria);

        btnEditarCategoria.setText("Editar");
        btnEditarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCategoriaActionPerformed(evt);
            }
        });
        jpButtonsCategoria.add(btnEditarCategoria);

        btnGrabarCategoria.setText("Grabar");
        btnGrabarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarCategoriaActionPerformed(evt);
            }
        });
        jpButtonsCategoria.add(btnGrabarCategoria);

        btnCancelarCategoria.setText("Cancelar");
        btnCancelarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCategoriaActionPerformed(evt);
            }
        });
        jpButtonsCategoria.add(btnCancelarCategoria);

        btnEliminarCategoria.setText("Eliminar");
        btnEliminarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCategoriaActionPerformed(evt);
            }
        });
        jpButtonsCategoria.add(btnEliminarCategoria);

        btnBuscarCategoria.setText("Buscar");
        btnBuscarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCategoriaActionPerformed(evt);
            }
        });
        jpButtonsCategoria.add(btnBuscarCategoria);

        btnCerrarCategoria.setText("Regresar");
        btnCerrarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarCategoriaActionPerformed(evt);
            }
        });
        jpButtonsCategoria.add(btnCerrarCategoria);

        jPanel1.add(jpButtonsCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 330, 70));

        jLabel4.setText("ID:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, -1));

        txtIdCategoria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdCategoriaFocusLost(evt);
            }
        });
        jPanel1.add(txtIdCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 150, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaCategoriaActionPerformed
        stateNew();
        txtNombreCategoria.requestFocus();
        addOption = true;
    }//GEN-LAST:event_btnNuevaCategoriaActionPerformed

    private void btnCancelarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCategoriaActionPerformed
        stateInitial();
        cleanControls();
    }//GEN-LAST:event_btnCancelarCategoriaActionPerformed

    private void btnCerrarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarCategoriaActionPerformed
        GUIProducts instance = new GUIProducts(productService, categoryService);
        instance.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCerrarCategoriaActionPerformed

    private void btnGrabarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarCategoriaActionPerformed
        if (txtNombreCategoria.getText().trim().equals("")) {
            Messages.showMessageDialog("Debe ingresar el nombre de la categoria", "Atención");
            txtNombreCategoria.requestFocus();
            return;
        }
        if (addOption) {
            addCategory();

        } else {
            editCategory();
        }
    }//GEN-LAST:event_btnGrabarCategoriaActionPerformed

    private void btnEditarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCategoriaActionPerformed
        addOption = false;
        stateEdit();
        txtIdCategoria.requestFocus();
    }//GEN-LAST:event_btnEditarCategoriaActionPerformed

    private void txtIdCategoriaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdCategoriaFocusLost
        if (txtIdCategoria.getText().trim().equals("")) {
            return;
        }
        Long categoryId = Long.parseLong(txtIdCategoria.getText());
        Category categ = categoryService.findOneCategoryById(categoryId);
        if (categ == null) {
            Messages.showMessageDialog("El identificador de la categoria no existe", "Error");
            txtIdCategoria.setText("");
            txtIdCategoria.requestFocus();
        } else {
            txtNombreCategoria.setText(categ.getName());
        }
    }//GEN-LAST:event_txtIdCategoriaFocusLost

    private void btnEliminarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCategoriaActionPerformed
        String id = txtIdCategoria.getText().trim();
        if (id.equals("")) {
            Messages.showMessageDialog("Debe buscar la categoria a eliminar", "Atención");
            txtIdCategoria.requestFocus();
            return;
        }
        Long categoryId = Long.parseLong(id);
        List<Product> existingProducts = productService.findProductByCategory(Long.valueOf(id));
        if(existingProducts.size() > 0){
            Messages.showMessageDialog("No puedo eliminar esta categoria porque tiene productos asociados.", "Atención.");
            return;
        }
        if (Messages.showConfirmDialog("Está seguro que desea eliminar esta categoria?", "Confirmación") == JOptionPane.YES_NO_OPTION) {
            if (categoryService.deleteCategory(categoryId)) {
                Messages.showMessageDialog("Categoria eliminada con éxito", "Atención");
                stateInitial();
                cleanControls();
            }
        }
    }//GEN-LAST:event_btnEliminarCategoriaActionPerformed

    private void btnBuscarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCategoriaActionPerformed
        GUICategoryFind instance = new GUICategoryFind(categoryService);
        instance.setVisible(true);
    }//GEN-LAST:event_btnBuscarCategoriaActionPerformed

    /**
     * @param args the command line arguments
     */
    private void stateEdit() {
        btnNuevaCategoria.setVisible(false);
        btnEditarCategoria.setVisible(false);
        btnEliminarCategoria.setVisible(true);
        btnCancelarCategoria.setVisible(true);
        btnCerrarCategoria.setVisible(false);
        btnGrabarCategoria.setVisible(true);
        btnBuscarCategoria.setVisible(false);
        txtIdCategoria.setEnabled(true);
        txtNombreCategoria.setEnabled(true);
    }

    private void stateInitial() {
        btnNuevaCategoria.setVisible(true);
        btnEditarCategoria.setVisible(true);
        btnEliminarCategoria.setVisible(false);
        btnCancelarCategoria.setVisible(false);
        btnCerrarCategoria.setVisible(true);
        btnGrabarCategoria.setVisible(false);
        btnBuscarCategoria.setVisible(true);
        txtIdCategoria.setEnabled(false);
        txtNombreCategoria.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCategoria;
    private javax.swing.JButton btnCancelarCategoria;
    private javax.swing.JButton btnCerrarCategoria;
    private javax.swing.JButton btnEditarCategoria;
    private javax.swing.JButton btnEliminarCategoria;
    private javax.swing.JButton btnGrabarCategoria;
    private javax.swing.JButton btnNuevaCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jpButtonsCategoria;
    private javax.swing.JTextField txtIdCategoria;
    private javax.swing.JTextField txtNombreCategoria;
    // End of variables declaration//GEN-END:variables

    private void stateNew() {
        btnNuevaCategoria.setVisible(false);
        btnEditarCategoria.setVisible(false);
        btnEliminarCategoria.setVisible(false);
        btnCancelarCategoria.setVisible(true);
        btnCerrarCategoria.setVisible(false);
        btnGrabarCategoria.setVisible(true);
        btnBuscarCategoria.setVisible(false);
        txtIdCategoria.setEnabled(false);
        txtNombreCategoria.setEnabled(true);
    }

    private void cleanControls() {
        txtIdCategoria.setText("");
        txtNombreCategoria.setText("");
    }

    private void addCategory() {
        String name = txtNombreCategoria.getText().trim();
        List<Category> existingCategories = categoryService.findCategoryByName(name);

        if (!existingCategories.isEmpty()) {
            Messages.showMessageDialog("La categoría ya existe o es similar a: " + existingCategories.get(0).getName(), "Atención");
            return;
        }

        if (categoryService.saveCategory(name)) {
            Messages.showMessageDialog("Se grabó con éxito", "Atención");
            cleanControls();
            stateInitial();
        } else {
            Messages.showMessageDialog("Error al grabar, lo siento mucho", "Atención");
        }
    }

    private void editCategory() {
        String id = txtIdCategoria.getText().trim();
        if (id.equals("")) {
            Messages.showMessageDialog("Debe buscar la categoría a editar", "Atención");
            txtIdCategoria.requestFocus();
            return;
        }
        Long categoryId = Long.parseLong(id);
        Category categ = new Category();
        categ.setName(txtNombreCategoria.getText().trim());

        if (categoryService.editCategory(categoryId, categ)) {
            Messages.showMessageDialog("Se editó con éxito", "Atención");
            cleanControls();
            stateInitial();
        } else {
            Messages.showMessageDialog("Error al editar, lo siento mucho", "Atención");
        }
    }

}
