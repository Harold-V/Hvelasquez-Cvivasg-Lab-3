/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.unicauca.openmarket.presentation;

import co.edu.unicauca.openmarket.domain.Category;
import co.edu.unicauca.openmarket.domain.Product;
import co.edu.unicauca.openmarket.domain.service.CategoryService;
import co.edu.unicauca.openmarket.domain.service.ProductService;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import co.edu.unicauca.openmarket.infra.Messages;

/**
 *
 * @author Libardo Pantoja
 */
public class GUIProductsFind extends javax.swing.JDialog {

    private final ProductService productService;
    private final CategoryService categoryService;

    /**
     * Creates new form GUIProductsFind
     */
    public GUIProductsFind(java.awt.Frame parent, boolean modal, ProductService productService, CategoryService categoryService) {
        super(parent, modal);
        initComponents();
        initializeTable();
        this.productService = productService;
        this.categoryService = categoryService;
        setLocationRelativeTo(null); //centrar al ventana
    }

    private void initializeTable() {
        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Name", "Description", "Categoria"
                }
        ));
    }

    private void fillTable(List<Product> listProducts) {
        initializeTable();
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();

        Object rowData[] = new Object[4];//No columnas
        for (int i = 0; i < listProducts.size(); i++) {
            rowData[0] = listProducts.get(i).getProductId();
            rowData[1] = listProducts.get(i).getName();
            rowData[2] = listProducts.get(i).getDescription();
            rowData[3] = listProducts.get(i).getCategory().getName();

            model.addRow(rowData);
        }
    }

    private boolean isNumeric(String text) {
        try {
            Long.parseLong(text);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private Category findCategoryByName(String selectedName) {
        List<Category> listCategories = categoryService.findAllProducts();
        for (Category category : listCategories) {
            if (category.getName().equalsIgnoreCase(selectedName)) {
                return category;
            }
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlCenter = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnSearchAll = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        rdoId = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        rdoName = new javax.swing.JRadioButton();
        rdbtnCategoria = new javax.swing.JRadioButton();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Búsqueda de productos");

        pnlCenter.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblProducts);

        pnlCenter.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 460, 160));

        btnSearchAll.setText("Mostrar Todo");
        btnSearchAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAllActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearchAll);

        btnClose.setText("Regresar");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnClose);

        pnlCenter.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 303, 460, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Buscar Producto");
        pnlCenter.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, -1));

        buttonGroup1.add(rdoId);
        rdoId.setSelected(true);
        rdoId.setText("ID");
        pnlCenter.add(rdoId, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 120, -1));

        jLabel1.setText("Buscar por:");
        pnlCenter.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, 20));

        buttonGroup1.add(rdoName);
        rdoName.setText("Nombre");
        pnlCenter.add(rdoName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, -1, 20));

        buttonGroup1.add(rdbtnCategoria);
        rdbtnCategoria.setText("Categoria");
        pnlCenter.add(rdbtnCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, -1, -1));

        txtSearch.setPreferredSize(new java.awt.Dimension(62, 32));
        pnlCenter.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 230, 22));

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        pnlCenter.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnSearchAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAllActionPerformed
        fillTable(productService.findAllProducts());
    }//GEN-LAST:event_btnSearchAllActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String searchText = txtSearch.getText().trim();
        if (searchText.isEmpty()) {
            Messages.showMessageDialog("Ingrese algo para buscar.", "Atención");
            return;
        }

        if (rdoId.isSelected()) {
            if (!isNumeric(searchText)) {
                Messages.showMessageDialog("Ingrese un número válido para buscar por ID.", "Atención");
                return;
            }
            fillTable(productService.findProductById(Long.parseLong(searchText)));
        }

        if (rdoName.isSelected()) {
            fillTable(productService.findProductByName(searchText));
        }

        if (rdbtnCategoria.isSelected()) {
            List<Category> existingCategories = categoryService.findCategoryByName(searchText);
            if (existingCategories.isEmpty()) {
                return;
            }
            fillTable(productService.findProductByCategory(existingCategories.get(0).getCategoryId()));
        }
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchAll;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JRadioButton rdbtnCategoria;
    private javax.swing.JRadioButton rdoId;
    private javax.swing.JRadioButton rdoName;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
